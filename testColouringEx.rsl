./ColouringEx

scheme testColouringEx =
  extend ColouringEx with
  class
    value
      r : Relation =
        {("P1", "P2"), ("P1", "P3"), ("P2", "P4"), ("P2", "P5"), ("P3", "P7"),
         ("P4", "P5"), ("P4", "P6"), ("P4", "P7"), ("P4", "P8"), ("P5", "P6"),
         ("P6", "P8"), ("P7", "P8")},
      colouring : Colouring =
        {{"P1", "P4"}, {"P2", "P3", "P6"}, {"P7", "P5"}, {"P8"}},
      pieceset : Piece-set = setOfAllPieces(r)

    test_case
      [areNb]
        areNb("P1", "P2", r),
        areNb("P2", "P1", r),
      ~ areNb("P1", "P8", r),
      [isCorrectColouring]
        isCorrectColouring(colouring, r),
      ~ isCorrectColouring({{"P1", "P2"}, {"P3", "P4"}}, r),
      [pieceIsOnlyColouredOnce]
        pieceIsOnlyColouredOnce(colouring),
      ~ pieceIsOnlyColouredOnce({{"P1", "P4"}, {"P1", "P2", "P3"}}),
      [everyPieceIsColoured]
        everyPieceIsColoured(colouring, r),
      ~ everyPieceIsColoured({{"P1", "P4"}, {"P2", "P3", "P6"}, {"P7", "P5"}}, r),
      [pieceCanBeAssignedColour]
        pieceCanBeAssignedColour("P1", {"P7", "P5"}, r),
        pieceCanBeAssignedColour("P1", {"P7", "P8", "P1"}, r),
      ~ pieceCanBeAssignedColour("P2", {"P1", "P4"}, r),
      [setOfAllPieces]
        setOfAllPieces(r) = {"P1", "P2", "P3", "P4", "P5", "P6", "P7", "P8"},
      ~ (setOfAllPieces(r) = {"P1", "P2", "P3", "P4", "P5"}),
      [assignColour]
        assignColour("P8", {{"P1", "P4"}, {"P2", "P3", "P6"}, {"P7", "P5"}}, {}, r) = {{"P6","P3","P2"},{"P5","P7"},{"P4","P1"},{"P8"}},
      [findColouring]
          findColouring(pieceset, {}, r) = {{"P1","P4"},{"P6","P2","P3"},{"P8","P5"},{"P7"}},
      [ex]
        col(r) = {{"P1","P4"},{"P6","P2","P3"},{"P8","P5"},{"P7"}}


  end
